---
- name: Install NodeRED
  npm:
    name: node-red
    state: latest
    global: yes

# Setup user for NodeRed to run as.
- name: Add NodeRED group
  group:
      name: nodered
- name: Add NodeRED user
  user:
      name: nodered
      append: yes
      group: nodered
      groups: dialout,i2c,spi
      shell: /usr/sbin/nologin

- name: NodeRed Working dir exists
  file:
      path: /home/nodered/.node-red
      state: directory
      owner: nodered
      group: nodered
      mode: 0750

# TODO: Set admin interface password.
#   ?? How best to set passwords with ansible?
# - read into var.
# - Inject new values
# - write out to file.
# OR
# - a template and overwrite the default setting.js?
#- name: Set NodeRED Admin Credit
#  template:
#    src: settings.j2
#    dest: /home/nodered/.node-red/settings.js
#    owner: nodered
#    group: nodered
#    mode: '0600'
#    backup: yes

# Install some node-red modules into where node-red can manage them.
- name: Install NodeRED modules
  npm:
      path: /home/nodered/.node-red
      state: latest
      name: "{{ item }}"
      production: yes
  with_items:
    - node-red-contrib-exosite
    - node-red-dashboard
    - node-red-node-smooth
    - node-red-node-random
    - node-red-node-pidcontrol
    - node-red-node-serialport
  # These BLE items need .deb packages to be installed first.
  # They should be a seperate role.
  # - node-red-contrib-sensortag
  # - node-red-contrib-bean
  become: true
  become_user: nodered
# TODO: After this, reload/restart nodered to pickup the installed nodes.
# Or can we hold off starting it until after this is done?

- name: Copy systemd config for NodeRED
  copy: src=nodered.service dest=/lib/systemd/system/nodered.service

- name: Run NodeRED on boot
  systemd:
      name: nodered.service
      daemon_reload: yes
      enabled: yes
      state: started

